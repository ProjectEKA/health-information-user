server:
  port: 8003
hiu:
  id: ${HIU_ID}
  name: ${HIU_NAME}
  dataPushUrl: ${DATA_PUSH_URL}
  valueSets: classpath:/static/ValueSet/valuesets.json
  secret: ${HIU_SECRET:RiPzliMKlBf67mgLpvn6LBg2Fz5OqBBmJNzi4nQ9YMZy0pq2uu}
  consentmanager:
    suffix: ${CONSENT_MANAGEMENT_SUFFIX}
    url: ${CONSENT_MANAGEMENT_URL}
  dataflowservice:
    defaultPageSize: ${DEFAULT_PAGE_SIZE}
    maxPageSize: ${MAX_PAGE_SIZE}
    localStoragePath: ${LOCAL_STORAGE_PATH}
    #Time in minutes
    dataFlowRequestWaitTime: ${DATA_FLOW_REQUEST_WAIT_TIME:1}
    dataPartWaitTime: ${DATA_FLOW_PART_WAIT_TIME:1440}
  database:
    host: ${POSTGRES_HOST}
    port: ${POSTGRES_PORT}
    schema: ${CONSENT_MANAGER_DB_NAME}
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    poolSize: ${DB_CONNECTION_POOL_SIZE}
    replica-read-enabled: {REPLICA_READ_ENABLED:false}
    replica:
      host: ${REPLICA_POSTGRES_HOST}
      port: ${REPLICA_POSTGRES_PORT:5432}
      user: ${REPLICA_POSTGRES_USER}
      password: ${REPLICA_POSTGRES_PASSWORD}
      poolSize: ${REPLICA_POOL_SIZE:3}
  dataflow:
    offsetInDays: ${OFFSET_IN_DAYS}
    usingGateway: ${USING_GATEWAY}
  dicomserver:
    url: ${ORTHANC_SERVER_URL}
    user: ${ORTHANC_USERNAME}
    password: ${ORTHANC_PASSWORD}
  userservice:
    jwkUrl: ${IDENTITY_JWK_URL}
  gatewayservice:
    baseUrl: ${GATEWAY_BASE_URL}
    requestTimeout: ${GATEWAY_REQUEST_TIMEOUT}
    clientId: ${HIU_CLIENT_ID}
    clientSecret: ${HIU_CLIENT_SECRET}
    jwkUrl: ${GATEWAY_JWK_URL}
    access-token-expiry-in-minutes: ${TOKEN_EXPIRY:10}
  consentservice:
    consentRequestFromYears: ${CONSENT_REQUEST_FROM_YEARS:7}
    consentExpiryInMonths: ${CONSETN_EXPIRY_IN_MONTHS:2}
    defaultPageSize: ${DEFAULT_CR_PAGE_SIZE:200}
    consentRequestDelay: ${MAXIMUM_CONSENT_REQUEST_DELAY_IN_MINUTES:10}
  authorization:
    header: ${AUTHORIZATION_HEADER:Authorization}
  #Valid values are guava(for local), redis
  cache-method: ${CACHE_METHOD:guava}
  redis:
    #Will not be used if cacheMethod is guava
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:password}
    keep-alive-enabled: ${KEEP_ALIVE_ENABLED:false}
    retry: ${REDIS_RETRY:0}
    use-default-client-config: ${USE_DEFAULT_CLIENT_CONFIG:true}
  accountservice:
    usingUnsecureSSL: ${Account_Service_Uses_Unsecure_SSL:true}
    url: ${Account_Service_Url}
    enable-offline-verification: ${ENABLE_OFFLINE_VERIFICATION:true}
    hasBehindGateway: ${HAS_BEHIND_GATEWAY:true}
    clientId: ${HAS_CLIENT_ID}
    clientSecret: ${HAS_CLIENT_SECRET}
    hasAuthUrl: ${HAS_AUTH_URL}
spring:
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    queuePrefix: ${RABBITMQ_PREFIX}
  codec:
    max-in-memory-size: ${MAX_IN_MEMORY_SIZE}
webclient:
  keepAlive: ${HIU_KEEP_ALIVE:true}
